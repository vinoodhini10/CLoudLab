file name:script.js

const express = require('express');
const app = express();
const Joi = require('joi');
const bodyParser = require('body-parser');
app.use(express.json());
const books = [
{title: 'Harry Potter', id: 1},
{title: 'Twilight', id: 2},
{title: 'Lorien Legacies', id: 3}
]
//READ Request Handlers
app.get('/', (req, res) => {
res.send('Welcome to Edurekas REST API with Node.js Tutorial!!');
});
app.get('/api/books', (req,res)=> {
res.send(books);
});
app.get('/api/books/:id', (req, res) => {
const book = books.find(c => c.id === parseInt(req.params.id));
if (!book) res.status(404).send('<h2 style="font-family: Malgun Gothic; color: darkred;">Ooops...Cant find what you are looking for!</h2>');
res.send(book);
});
//CREATE Request Handler
app.post('/api/books', (req, res)=> {
const { error } = validateBook(req.body);
if (error){

res.status(400).send(error.details[0].message)
return;
}
const book = {
id: books.length + 1,
title: req.body.title
};
books.push(book);
res.send(book);
});
//UPDATE Request Handler
app.put('/api/books/:id', (req, res) => {
const book = books.find(c=> c.id === parseInt(req.params.id));
if (!book) res.status(404).send('<h2 style="font-family: Malgun Gothic; color: darkred;">Not Found!!</h2>');
const { error } = validateBook(req.body);
if (error){
res.status(400).send(error.details[0].message);
return;
}
book.title = req.body.title;
res.send(book);
});
//DELETE Request Handler
app.delete('/api/books/:id', (req, res) => {
const book = books.find( c=> c.id === parseInt(req.params.id));
if(!book) res.status(404).send('<h2 style="font-family: Malgun Gothic; color: darkred;"> Not Found!!</h2>');
const index = books.indexOf(book);
books.splice(index,1);
res.send(book);
});
function validateBook(book) {

const schema = Joi.object({id:Joi.string().min(1),title:Joi.string().min(2)});
return schema.validate(book);
};
//PORT ENVIRONMENT VARIABLE
const port = process.env.PORT || 8080;
app.listen(port, () => console.log(`Listening on port ${port}..`));

command prompt:

npm init
npm i express
npm install joi
npm i express
npm install body-parser
npm i -g nodemon
node script.js

in postman:

localhost:8080/api/books/    - get{display}
localhost:8080/api/books/    - post body-raw-json{insert} enter the "title":"Meluha"
localhost:8080/api/books/4   - delete
localhost:8080/api/books/2    - put body-raw-json{update} enter title:"Meluha"

